--- manual-doc_core_tsref_3-8.txt	2007-02-21 04:27:50.000000000 +0100
+++ manual-doc_core_tsref_4-0.txt	2007-02-21 04:27:50.000000000 +0100
@@ -6,7 +6,7 @@
 
 TSref
 Extension Key: doc_core_tsref
-Copyright 2000-2005, Kasper Skårhøj, <kasperYYYY@typo3.com>
+Copyright 2000-2006, kasperYYYY@typo3.com, <kasperYYYY@typo3.com>
 
 This document is published under the Open Content License
 available from http://www.opencontent.org/opl.shtml
@@ -26,140 +26,138 @@
 Data types4
 Introduction4
 Datatype reference4
-Data types: Object types9
-Objects and properties10
-Introduction10
-Reference to objects:10
-Calculating values (+calc):10
-"... / stdWrap":10
-optionSplit:10
-Conditions13
-Condition reference: 13
-browser13
+Data types: Object types8
+Objects and properties9
+Introduction9
+Reference to objects:9
+Calculating values (+calc):9
+"... /stdWrap":9
+optionSplit:9
+Conditions12
+Condition reference: 12
+browser12
 version13
-system14
-device14
-useragent 15
-language16
-IP16
-hostname16
+system13
+device13
+useragent 14
+language15
+IP15
+hostname15
 hour16
-minute17
-dayofweek17
-dayofmonth17
-month17
+minute16
+dayofweek16
+dayofmonth16
+month16
 usergroup17
-loginUser18
-treeLevel18
-PIDinRootline18
+loginUser17
+treeLevel17
+PIDinRootline17
 PIDupinRootline18
+compatVersion18
 globalVars:18
-globalString:19
-userFunc:20
+globalString:18
+userFunc:19
 Functions:21
 stdWrap:21
 imgResource:27
-imageLinkWrap:28
-numRows:29
-select:29
-split:30
-if:31
-typolink:32
-textStyle35
-encapsLines36
-tableStyle38
-addParams38
-filelink39
-parseFunc:41
-makelinks:43
-tags:44
-HTMLparser:44
-HTMLparser_tags:45
-Constants47
-What are constants?47
-Inserting constants47
-Setup:49
-Toplevel objects:49
-The plugin TLO:49
-"CONFIG":50
-"CONSTANTS":59
-"PAGE":59
-"FE_DATA":62
-"FE_TABLE":62
-"FRAMESET":63
-"FRAME":63
-"META":63
-"CARRAY":64
-Content Objects (cObject)65
-PHP-information: 65
-HTML:66
-TEXT:66
-COBJ_ARRAY (COA, COA_INT):67
-FILE:68
-IMAGE:68
-IMG_RESOURCE:68
-CLEARGIF:69
-CONTENT:69
-RECORDS:70
-HMENU:71
-CTABLE:78
-OTABLE: 79
-COLUMNS:79
-HRULER:79
-IMGTEXT:79
-CASE:83
-LOAD_REGISTER:84
-RESTORE_REGISTER:84
-FORM:84
-SEARCHRESULT:89
-USER and USER_INT:91
-PHP_SCRIPT:92
-PHP_SCRIPT_INT:92
-PHP_SCRIPT_EXT:93
-TEMPLATE:93
-MULTIMEDIA:95
-EDITPANEL:96
-GIFBUILDER97
-GIFBUILDER:97
-Objectnames in this section:98
-NON-GifBuilderObj: 104
-MENU Objects105
-Common properties:105
-Common item states for TMENU, GMENU and IMGMENU series:106
-[menuObj].sectionIndex106
-GMENU:107
-GMENU_LAYERS / TMENU_LAYERS:108
-GMENU_FOLDOUT:111
-TMENU:114
-TMENUITEM:115
-IMGMENU:116
-IMGMENUITEM:117
-JSMENU:117
-JSMENUITEM:117
-media/scripts/ Plugins119
-media/scripts/ in general119
-About ?example templates?119
-fe_adminLib.inc120
-tipafriendLib.inc129
-plaintextLib.inc130
-Standard Templates133
-static_template133
-Media133
-PHP include scripts134
-Introduction134
-Including your script134
-Casestory:136
-Storing user-data or session-data137
-Using the built in "shopping basket"138
-index.php139
-Introduction139
-Submitting data to index.php139
-Search:139
-Emailforms:140
-Database-submit140
-Tips141
-Preparing pages for Direct Mail sending141
-Preparing pages for indexing141
+imageLinkWrap:29
+numRows:30
+select:30
+split:31
+if:32
+typolink:33
+textStyle36
+encapsLines37
+tableStyle39
+addParams39
+filelink40
+parseFunc:42
+makelinks:44
+tags:45
+HTMLparser:45
+HTMLparser_tags:46
+Constants48
+What are constants?48
+Inserting constants48
+Setup:50
+Toplevel objects:50
+The plugin TLO:50
+"CONFIG":51
+"CONSTANTS":62
+"PAGE":62
+"FE_DATA":65
+"FE_TABLE":65
+"FRAMESET":66
+"FRAME":66
+"META":66
+"CARRAY":67
+Content Objects (cObject)68
+PHP-information: 68
+HTML:69
+TEXT:69
+COBJ_ARRAY (COA, COA_INT):70
+FILE:71
+IMAGE:71
+IMG_RESOURCE:71
+CLEARGIF:72
+CONTENT:72
+RECORDS:74
+HMENU:75
+CTABLE:81
+OTABLE: 82
+COLUMNS:82
+HRULER:83
+IMGTEXT:83
+CASE:87
+LOAD_REGISTER:87
+RESTORE_REGISTER:88
+FORM:88
+SEARCHRESULT:93
+USER and USER_INT:94
+PHP_SCRIPT:95
+PHP_SCRIPT_INT:95
+PHP_SCRIPT_EXT:96
+TEMPLATE:97
+MULTIMEDIA:98
+EDITPANEL:99
+GIFBUILDER101
+GIFBUILDER:101
+Objectnames in this section:102
+NON-GifBuilderObj: 107
+MENU Objects109
+Common properties:109
+Common item states for TMENU, GMENU and IMGMENU series:111
+[menuObj].sectionIndex112
+GMENU:112
+GMENU_LAYERS / TMENU_LAYERS:114
+GMENU_FOLDOUT:117
+TMENU:119
+TMENUITEM:119
+IMGMENU:121
+IMGMENUITEM:121
+JSMENU:122
+JSMENUITEM:122
+media/scripts/ Plugins124
+media/scripts/ in general124
+About ?example templates?124
+fe_adminLib.inc125
+tipafriendLib.inc133
+plaintextLib.inc134
+Standard Templates137
+static_template137
+Media137
+PHP include scripts138
+Introduction138
+Including your script138
+Casestory:140
+Storing user-data or session-data141
+Using the built in "shopping basket"142
+index.php143
+Introduction143
+Submitting data to index.php143
+Search:143
+Emailforms:144
+Database-submit144
 
 IntroductionWarning
 This document is a reference - it does not intend to guide you step by step into TYPO3 or TypoScript. So you should know what you are looking for when coming to this document and then let tutorials do the explanatory work for you.General information
@@ -208,7 +206,7 @@
 2) If the value contains a "/" it?s expected to be a reference (absolute or relative) to a file on the file-system instead of the resource-field. No support for wildcards.
 
 imgResource
-Here "file" is a imgResource:
+Here "file" is an imgResource:
 file = toplogo*.gif
 file.width = 200
 
@@ -491,7 +489,7 @@
 See cObject "LOAD_REGISTER"
 leveltitle, leveluid, levelmedia: [levelTitle, uid or media in rootLine, 0- , negative = from behind,  , slide parameter forces a walk to the bottom of the rootline until there?s a true value to return. Useful with levelmedia.]
 levelfield: Like leveltitle et al. but where the second parameter is the rootLine field you want to fetch. Syntax: [pointer, integer], [fieldname], [slide]
-global : [GLOBAL-var, split with | if you want to get from an array! DEPRECIATED, use GPvar, TSFE or getenv]
+global : [GLOBAL-var, split with | if you want to get from an array! DEPRECATED, use GPvar, TSFE or getenv]
 date : [date-conf]
 page : [current page record]
 current : 1 (gets ?current? value)
@@ -509,9 +507,12 @@
 
 LLL: Reference to a locallang (php or xml) label. Reference consists of [fileref]:[labelkey]
 path: path to a file, possibly placed in an extension, returns empty if the file doesn?t exist.
-cObj: [internal variable from list: parentRecordNumber]
+cObj: [internal variable from list: parentRecordNumber]: For CONTENT and RECORDS cObjects that are returned 
+by a select query, this returns the row number (1,2,3,...) of the current cObject record.
 debug: Returns HTML formated content of PHP variable defined by keyword. Available keys are rootLine, fullRootLine, data
 --------------------
+Getting array/object elements.
+You can fetch the value of an array/object by splitting it with a pipe |.Example: TSFE:fe_user|user|username
 Getting more values.
 By separating the value of getText with "//" (double slash) you let getText fetch the first value. If it appears empty ("" or zero) the next value is fetched and so on. Example:
 = field:header // field:title // field:uid
@@ -569,9 +570,9 @@
 Whenever you see ->[objectname] in the tables it means that the property is an object "objectname" with properties from object objectname. You don?t need to define the objecttype. Calculating values (+calc):
 Sometimes a datatype is set to "something +calc". "+calc" indicates that the value is calculated with "+-/*". Be aware that the operators has no "weight". The calculation is done in the order of the operators.Example:
 45 + 34 * 2 = 158(which is the same as this is ordinary arithmetic: (45+34)*2=158 )
-"... / stdWrap":
-When a datatype is set to "type / stdWrap" it means that the value is parsed through the stdWrap function with the properties of the value as parameters.Example:
-pixels / stdWrap:Here the value should be set to pixels and parsed through stdWrap.
+"... /stdWrap":
+When a datatype is set to "type /stdWrap" it means that the value is parsed through the stdWrap function with the properties of the value as parameters.Example:
+pixels /stdWrap:Here the value should be set to pixels and parsed through stdWrap.
 In a real application we could do like this:
 .pixels.field = imagewidth
 .pixels.intval = 1
@@ -691,8 +692,19 @@
 ....(yellow)middle, subpart 1
 ....(green)middle, subpart 2
 Contact(yellow)middle, subpart 1
-Links(green)middle, subpart 2ConditionsCondition reference: General note:
-Values are normally trimmed for whitespace before comparison.browserSyntax:
+Links(green)middle, subpart 2ConditionsCondition reference: General notes:
+Values are normally trimmed for whitespaces before comparison.
+You may combine several conditions with two operators: && (and), || (or)
+Alternatively you may use "AND" and "OR" instead of "&&" and "||". The AND operator has always higher precedence over OR. If no operator has been specified, it will default to OR.Examples:
+This condition will match if the visitor opens the website with Internet Explorer on Windows (but not on Mac)
+[browser = msie] && [system = win]
+
+This will match with either Opera or Netscape browsers
+[browser = opera] || [browser = netscape]
+
+This will match with either Internet Explorer or Netscape. In case of Netscape, the version must be above 4.
+[browser = msie] || [browser = netscape] && [version => 4]
+browserSyntax:
 [browser = browser1,browser2,...]
 Values and comparison:
 Browser:
@@ -967,6 +979,10 @@
 PIDupinRootlineSyntax:
 [PIDupinRootline = pages-uid, pages-uid, ...]Comparison:
 Do the same as PIDinRootline, except the current page-uid is excluded from check.
+compatVersionSyntax:
+[compatVersion = x.y.z]Comparison:
+Require a minimum compatibility version. This version is not necessary equal with the TYPO3 version, it is a configurable value that can be changed in the Upgrade Wizard of the Install Tool.
+compatVersion is especially useful if you want to provide new default settings but keep the backwards compatibility for old versions of TYPO3.
 globalVars:Syntax:
 [globalVar= var1=value, var2<value2, var3>value3, ...]
 Comparison:
@@ -980,10 +996,10 @@
 <
 The var must be less than the value
 globalString:Syntax:
-[globalString= var1=value, var2= *value2, var3= *value3*, ...]
+[globalString = var1=value, var2= *value2, var3= *value3*, ...]
 Comparison:
 This is a direct match on global strings.
-You have the options of putting a "*" at the beginning and/or end of the value thereby matching with this wildcard!Examples:
+You have the options of putting a "*" as a wildcard or using a PCRE style regular expression (must be wrapped in "/") to the value.Examples:
 If the HTTP_HOST is "www.typo3.com" this will match with:
 [globalString = HTTP_HOST=www.typo3.com]
 
@@ -991,12 +1007,12 @@
 [globalString = HTTP_HOST= *typo3.com]
 
 ... but this will also match with a HTTP_HOST like this: "demo.typo3.com"
-IMPORTANT NOTE ON GlobalVar and GlobalString:
-You can use values from global arrays by deviding the var-name with a "|" (vertical line). 
-Example: the global var $HTTP_POST_VARS["key"]["levels"] would be retrieved by "HTTP_POST_VARS|key|levels "
+IMPORTANT NOTE ON globalVar and globalString:
+You can use values from global arrays and objects by deviding the var-name with a "|" (vertical line). 
+Examples: The global var $HTTP_POST_VARS["key"]["levels"] would be retrieved by "HTTP_POST_VARS|key|levels"
 Also note that it?s recommended to program your scripts in compliance with the php.ini-optimized settings. Please see that file (from your distribution) for details.
-Caring about this means that you would get values like HTTP_HOST by getenv(), you would retrieve GET/POST values with t3lib_div::GPvar(). Finally a lot of values from the TSFE object are useful. In order to get those values for comparison with globalVar and globalString conditions, you prefix that varname with either "IENV"/ENV: , GP:, TSFE: or LIT: respectively. Still the | divider may be used to separate keys in arrays. LIT means literal and the string after : is trimmed and returned as the value (without being divided by | or anything)
-Notice: Using the "IENV:" prefix is highly recommended to get server/environment variables which are system independant. Basically this will call and return the value from t3lib_div::getIndpEnv() function. With "ENV:" you get the raw output from getenv() which is NOT always the same on all systems! "IENV:" is supported from TYPO3 3.6Examples:
+Caring about this means that you would get values like HTTP_HOST by getenv(), you would retrieve GET/POST values with t3lib_div::GPvar(). Finally a lot of values from the TSFE object are useful. In order to get those values for comparison with globalVar and globalString conditions, you prefix that varname with either "IENV"/ENV: , GP:, TSFE: or LIT: respectively. Still the | divider may be used to separate keys in arrays and/or objects. LIT means literal and the string after : is trimmed and returned as the value (without being divided by | or anything)
+Notice: Using the "IENV:" prefix is highly recommended to get server/environment variables which are system independant. Basically this will call and return the value from t3lib_div::getIndpEnv() function. With "ENV:" you get the raw output from getenv() which is NOT always the same on all systems!Examples:
 This will match with a url like ...&print=1
 [globalVar = GP:print > 0]
 
@@ -1009,6 +1025,9 @@
 This will match with the pages having the layout field set to Layout 1:
 [globalVar = TSFE:page|layout = 1]
 
+This will match with the user whose username is test:
+[globalString = TSFE:fe_user|user|username = test]
+
 If the constant {$constant_to_turnSomethingOn} is 1 then this matches:
 [globalVar = LIT:1 = {$constant_to_turnSomethingOn}]
 userFunc:Syntax:
@@ -1040,10 +1059,10 @@
 10.value.case = upper
 
 Here the content of the object "10" is uppercased before it?s returned.
-stdWrap properties are executed in the order they appear in the table below. If you want to study this further please refer to tslib/content.php/, function stdWrap()
+stdWrap properties are executed in the order they appear in the table below. If you want to study this further please refer to typo3/sysext/cms/tslib/class.tslib_content.php, function stdWrap()
 
 
-(from tslib/class.tslib_content.php)
+(from typo3/sysext/cms/tslib/class.tslib_content.php)
 
 Content-supplying properties of stdWrap:
 The properties in this table is parsed in the listed order. The properties "data", "field", "current", "cObject" (in that order!) are special as they are used to import content from variables or arrays. The above example could be rewritten to this:
@@ -1068,7 +1087,7 @@
 Sets the "current"-value. This is normally set from some outside routine, so be careful with this. But it might be handy to do this
 
 lang
-array of language-keys
+Array of language keys
 This is used to define optional language specific values. 
 If the global language key set by the ->config property .language is found in this array, then this value is used instead of the default input value to stdWrap.
 
@@ -1106,12 +1125,12 @@
 Returns the number of rows resulting from the select
 
 filelist
-dir / stdWrap
+dir /stdWrap
 Reads a directory and returns a list of files.
 The value is exploded by "|" into parameters:
 1: The path
 2: comma-list of allowed extensions (no spaces between); if empty all extensions goes.
-3: sorting: name, size, ext, date
+3: sorting: name, size, ext, date, mdate (modification date)
 4: reverse: Set to "r" if you want a reversed sorting
 5: fullpath_flag: If set, the filelist is returned with complete paths, and not just the filename
 
@@ -1131,8 +1150,11 @@
 
 ifEmpty
 string /stdWrap
-if the content is empty (trimmed) at this point, the content is loaded with "ifEmpty".
-Zero?s are an empty value.
+if the content is empty (trimmed) at this point, the content is loaded with "ifEmpty". Zeros are treated as empty values!
+
+ifBlank
+string /stdWrap
+Same as "ifEmpty" but the check is done using strlen().
 
 listNum
 int
@@ -1142,10 +1164,11 @@
 
 Special keyword: "last" is set to the last element of the array!
 
-Property: 
-.splitChar = string; Defines the string used to explode the value. If splitChar is an integer, the character with that number is used (eg. "10" to split lines...)
-.stdWrap = stdWrap properties of the listNum...
-Default = "," (comma)
+.splitChar (string):
+Defines the string used to explode the value. If splitChar is an integer, the character with that number is used (eg. "10" to split lines...).
+Default: ," (comma)
+.stdWrap (stdWrap properties):
+stdWrap properties of the listNum...
 
 Examples:
 We have a value of "item 1, item 2, item 3, item 4":
@@ -1326,11 +1349,11 @@
 
 innerWrap
 wrap /stdWrap
-
+Wraps the content
 
 innerWrap2
 wrap /stdWrap
-
+same as .innerWrap (but watch the order in which they are executed)
 
 fontTag
 wrap
@@ -1368,6 +1391,16 @@
 ->typolink
 Wraps the content with a link-tag
 
+TCAselectItem.
+Array of properties
+Resolves a comma seperated list of values into the TCA item representation.
+
+.table (string): The Table to look up
+.field (string): The field to resolve
+.delimiter (string): Delimiter for concatenating multiple elements.
+
+Notice: Currently this works only with TCA fields of type select which are not database relations.
+
 spaceBefore
 int /stdWrap
 Pixels space before. Done with a clear-gif; <img ...><BR>
@@ -1397,7 +1430,7 @@
 
 wrap2
 wrap /+.splitChar
-see .wrap
+same as .wrap (but watch the order in which they are executed)
 
 dataWrap
 
@@ -1417,11 +1450,11 @@
 
 wrap3
 wrap /+.splitChar
-see .wrap
+same as .wrap (but watch the order in which they are executed)
 
 outerWrap
 wrap /stdWrap
-
+Wraps the complete content
 
 insertData
 boolean
@@ -1544,15 +1577,31 @@
 
 web
 width
-pixels / stdWrap
-If both the width and heigth is set and one of the numbers has an "m" after it, the proportions will be preserved and thus width/height will work as max-dimensions for the image.
+pixels /stdWrap
+If both the width and the heigth are set and one of the numbers is appended by an "m", the proportions will be preserved and thus width/height are treated as maximum dimensions for the image. The image will be scaled to fit into width/height rectangle.
 
-height
-pixels / stdWrap
+If both the width and the heigth are set and at least one of the numbers is appended by a "c", cropscaling will be enabled. This means that the proportions will be preserved and the image will be scaled to fit around a rectangle with width/height dimensions. Then, a centered portion from inside of the image (size defined by width/height) will be cut out.
+The "c" can have a percentage value (-100 ... +100) after it, which defines how much the cropping will be moved off the center to the border.
 
+Notice that you can only use m or c at the same time!
 
-params
+Examples:
+This crops 120x80px from the center of the scaled image:
+.width = 120c.height = 80c
 
+This crops 100x100px; from landscape-images at the left and portrait-images centered:
+.width = 100c-100.height = 100c
+
+This crops 100x100px; from landscape-images a bit right of the center and portrait-images a bit upper than centered:
+.width = 100c+30
+.height = 100c-25
+
+height
+pixels /stdWrap
+see .width
+
+params
+string
 ImageMagick command-line:
 fx. "-rotate 90" or "-negate"
 
@@ -1570,7 +1619,7 @@
 "" = first frame (zero)
 
 import
-path / stdWrap
+path /stdWrap
 value should be set to the path of the file
 with stdWrap you get the filename from the data-array
 
@@ -1581,11 +1630,11 @@
 .import.listNum = 0
 
 maxW
-pixels / stdWrap
+pixels /stdWrap
 Max width
 
 maxH
-pixels / stdWrap
+pixels /stdWrap
 Max height
 
 minW
@@ -1678,9 +1727,15 @@
 Each picture will open in a new window!
 
 JSwindow.altUrl
-string/stdWrap
+string /stdWrap
 If this returns anything, the URL shown in the JS-window is NOT showpic.php but the url given here!
 
+JSwindow.altUrl_noDefaultParams
+boolean
+If this is set, the image parameters are not appended to the altUrl
+automatically. This is useful if you want to create them with a userfunction
+instead.
+
 typolink
 ->typolink
 NOTE: This overrides the imageLinkWrap if it returns anything!!
@@ -1764,7 +1819,7 @@
 without "where"!, Eg. " (title LIKE ?%SOMETHING%? AND NOT doktype) "
 
 andWhere
-SQL-where / stdWrap
+SQL-where /stdWrap
 without "AND"!, Eg. "NOT doktype".
 
 languageField
@@ -1802,17 +1857,21 @@
 Description:
 Default:
 token
-str / stdWrap
+str /stdWrap
 string or character (token) used to split the value
 
 max
-int / stdWrap
+int /stdWrap
 max number of splits
 
 min
-int / stdWrap
+int /stdWrap
 min number of splits.
 
+returnKey
+int /stdWrap
+Instead of parsing the split result, just return this element of the index immediately.
+
 cObjNum
 cObjNum
 +optionSplit
@@ -1850,37 +1909,37 @@
 Description:
 Default:
 isTrue
-str / stdWrap
+str /stdWrap
 If the content is "true".... (not empty string and not zero)
 
 isFalse
-str / stdWrap
+str /stdWrap
 If the content is "false"... (empty or zero)
 
 isPositive
-int / stdWrap
+int /stdWrap
 + calc
 returns false if content is not positive
 
 isGreaterThan
-value / stdWrap
+value /stdWrap
 returns false if content is not greater than ".value"
 
 isLessThan
-value / stdWrap
+value /stdWrap
 returns false if content is not less than ".value"
 
 equals
-value / stdWrap
+value /stdWrap
 returns false if content does not equal ".value"
 
 isInList
-value / stdWrap
+value /stdWrap
 returns false if content is not in the comma-separated list ".value".
 The list in ".value" may not have spaces between elements!!
 
 value
-value / stdWrap
+value /stdWrap
 "value" (the comparison value mentioned above)
 
 negate
@@ -1961,6 +2020,10 @@
 boolean
 Add the QUERY_STRING to the start of the link. Notice that this does not check for any duplicate parameters! This is not a problem (only the last parameter of the same name will be applied), but enable "config.uniqueLinkVars" if you still don?t like it.
 
+.method: If set to to GET or POST then then the parsed query arguments (GET or POST data) will be used. This settings are useful if you use URL processing extensions like Real URL, which translate part of the path into query arguments.
+
+.exclude: List of query arguments to exclude from the link (eg L or cHash).
+
 wrap
 wrap
 Wraps the links.
@@ -1996,15 +2059,18 @@
 If you insert only "#234" where "234" is the tt_content record number, it links to the current page-id
 
 Target
-Target is normally defined by the ".extTarget" and "target" properties of typolink. But you may override this target by adding the new target after the parameter separated by whitespace. Thus the target becomes the ?second? parameter.
-If the ?Target? parameter is set to the ?-? character, then it?s the same as no target passed to the function. This feature enables you to still pass a class as third parameter without setting the target also.
+Target is normally defined by the "extTarget" and "target" properties of typolink. But you may override this target by adding the new target after the parameter separated by a whitespace. Thus the target becomes the second parameter.
+If the Target parameter is set to the - character, then it?s the same as no target passed to the function. This feature enables you to still pass a class as third parameter and title as fourth parameter without setting the target also.
 
 Open in windows with fixed dimensions (JavaScript)
 It is possible to open the link in a window opened by JavaScript (with window.open). For this, just set the target value to 123x456 where 123 is the window width and 456 is the window height. You can also specify additional parameters to the function by entering them separated from the width and height with a colon :. For instance 230x450:resizable=0,location=1 will disable resizing of the window and enable the location bar.
 Also see property JSwindow.
 
 Class
-If you specify a ?third parameter? separated by whitespace in the parameter value this becomes the class-parameter of the link. This class parameter is inserted in the link-tag before any values from .ATagParams which means this class value will override any class value set in ATagParams (at least for MSIE).
+If you specify a third parameter separated by whitespace in the parameter value this becomes the class-parameter of the link. This class parameter is inserted in the link-tag before any values from .ATagParams which means this class value will override any class value set in ATagParams (at least for MSIE). If set to -, then it?s the same as no class passed to the function. This feature enables you to still pass a title as fourth parameter without setting the class also.
+
+Title
+The title attribute is normally specified via .ATagParams or directly via the .title property. But you may override this value by adding the desired title as the fourth parameter (parameters separated by whitespace) to typolink.
 
 Examples of multiparameters:
 Consider this .parameter value passed to this function:
@@ -2016,6 +2082,10 @@
 <A href=?id=51 target=_blank class=blueLink>
 
 
+title
+string /stdWrap
+Sets the title parameter of the A-tag.
+
 JSwindow_params
 string
 Preset values for opening the window. This example lists almost all possible attributes:
@@ -2033,7 +2103,7 @@
 This is used create a link, which jumps from one page directly the section on another page.
 
 ATagParams
-<A>-params 
+<A>-params /stdWrap
 Additional parameters
 
 Example:
@@ -2441,7 +2511,7 @@
 
 
 ATagParams
-<A>-params 
+<A>-params /stdWrap
 Additional parameters
 
 Example:
@@ -2453,13 +2523,13 @@
 
 altText
 titleText
-string / stdWrap
+string /stdWrap
 For icons (image made with "iconCObject" must have their own properties)
 
 If no titltext is specified, it will use the alttext insteadIf no alttext is specified, it will use an empty alttext
 
 longdescURL
-string / stdWrap
+string /stdWrap
 For icons (image made with "iconCObject" must have their own properties)
 
 "longdesc" attribute (URL pointing to document with extensive details about image).
@@ -2664,7 +2734,7 @@
 "scheme,path,query": http://www.webaddress.rld/test/doc.php?id=3
 
 http.ATagParams
-<A>-params 
+<A>-params /stdWrap
 Additional parameters
 
 Example:
@@ -2679,7 +2749,7 @@
 If set, the link is first wrapped with mailto.wrap and then the <A>-tag.
 
 mailto.ATagParams
-<A>-params 
+<A>-params /stdWrap
 Additional parameters
 
 Example:
@@ -2949,7 +3019,7 @@
 Here you can configure how data submitted from the front-end should be processed, which script and so on.
 
 includeLibs
-array of strings
+Array of strings
 With this you can include php-files with function libraries for use in your includescript in TYPO3. 
 Please see the PAGE-object, which has the same property.
 
@@ -3014,11 +3084,11 @@
 This works only if the plugin calls $this->pi_setPiVarDefaults().
 
 _LOCAL_LANG.[lang-key].[label-key]
-String
+string
 Can be used to override the default locallang labels for the plugin.
 
 [tsref:plugin]"CONFIG":
-In tslib/ this is known as $GLOBALS["TSFE"]->config["config"], thus the property "debug" below is accessible as $GLOBALS["TSFE"]->config["config"]["debug"].
+In typo3/sysext/cms/tslib/ this is known as $GLOBALS["TSFE"]->config["config"], thus the property "debug" below is accessible as $GLOBALS["TSFE"]->config["config"]["debug"].
 Property:
 Data type:
 Description:
@@ -3127,24 +3197,19 @@
 
 doctype
 string
-If xhtml_frames then a header for XHTML-frames is outputted.
-If value is "xhtml_trans" then a header for XHTML transitional is outputted:
+If set, then a document type declaration (and an XML prologue) will be generated. The value can either be a complete doctype or one of the following keywords:
+
+"xhtml_trans" for XHTML 1.0 Transitional doctype.
+"xhtml_frames" for XHTML 1.0 Frameset doctype.
+"xhtml_strict" for XHTML 1.0 Strict doctype.
+"xhtml_basic" for XHTML basic doctype.
+"xhtml_11" for XHTML 1.1 doctype.
+"xhtml_2" for XHTML 2 doctype.
+"none" for NO doctype at all.
 
-<?xml version="1.0" encoding="[here goes config.metaCharset!]"?>
-<!DOCTYPE html 
-PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
-
-Keyword list:
-keyword xhtml_trans for XHTML 1.0 Transitional doctype.
-keyword xhtml_frames for XHTML 1.0 Frameset doctype.
-keyword xhtml_strict for XHTML 1.0 Strict doctype.
-keyword xhtml_11 for XHTML 1.1 doctype.
-keyword xhtml_2 for XHTML 2 doctype.
-keyword "none" for NO doctype at all.
+Note that the keywords also change the way TYPO3 generates some of the XHTML tags to ensure valid XML. If you set doctype to a string, then you must also set config.xhtmlDoctype (see below).
 
-Any other value than these keywords will be outputted as the doctype itself!
-Notice that some doctype keywords (all the xhtml* sorts) will set appropriate attributes for the <html> tag as well. See "config.htmlTag_setParams" and "config.htmlTag_langKey" below for more details.
+See "config.htmlTag_setParams" and "config.htmlTag_langKey" for more details on the effect on the html tag.
 
 Default is a DOCTYPE like this:
 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
@@ -3165,9 +3230,44 @@
 If your browser has detected the DOCTYPE correctly it will report CSS1Compat
 If you are not running in compliance mode you will get some other message. MSIE will report BackCompat for instance - this means it runs in quirks-mode, supporting all the old browser-bugs.
 
+xhtmlDoctype
+string
+Sets the document type for the XHTML version of the generated page.
+
+If config.doctype is set to a string then config.xhtmlDoctype must be set to one of these keywords:
+
+"xhtml_trans" for XHTML 1.0 Transitional doctype.
+"xhtml_frames" for XHTML 1.0 Frameset doctype.
+"xhtml_strict" for XHTML 1.0 Strict doctype.
+"xhtml_basic" for XHTML basic doctype.
+"xhtml_11" for XHTML 1.1 doctype.
+"xhtml_2" for XHTML 2 doctype.
+
+
+This is an example to use MathML 2.0 in an XHTML 1.1 document:
+
+config.doctype (
+<!DOCTYPE html
+PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
+"http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
+)
+config.xhtmlDoctype = xhtml_11
+
+Default:
+same as config.doctype if set to a keyword
+
 xmlprologue
 string
-If none then no XML prologue is created when config.doctype is set to one of the XHTML modes.
+If empty (not set) then the default XML 1.0 prologue is set, when the doctype is set to a known keyword (eg xhtml_11):
+
+<?xml version="1.0" encoding="[config.renderCharset]">
+
+If set to one of the know keywords then a standard prologue will be set:
+xml_10 XML 1.0 prologue (see above)
+xml_11 XML 1.1 prologue
+
+If "none" then the default XML prologue is not set.
+Any other string is used as the XML prologue itself.
 
 htmlTag_setParams
 string
@@ -3258,27 +3358,37 @@
 pageGenScript
 resource
 Alternative page generation script for applications using index_ts.php for initialization, caching, stating and so on. This script is included in the global scope of index_ts.php-script and thus you may include libraries here. Always use include_once for libraries.
-Remember not to output anything from such an included script. All content must be set into $TSFE->content. Take a look at tslib/pagegen.php
+Remember not to output anything from such an included script. All content must be set into $TSFE->content. Take a look at typo3/sysext/cms/tslib/pagegen.php
 
 NOTE: This option is ignored if 
 
 $TYPO3_CONF_VARS["FE"]["noPHPscriptInclude"]=1;
 
 is set in localconf.php.
-tslib/pagegen.php
+typo3/sysext/cms/tslib/pagegen.php
 debug
 boolean
 If set any debug-information in the TypoScript code is output. Currently this applies only to the menu-objects
 
 message_page_is_being_generated
 string
-Alternative message in HTML that appears if a page is being generated. 
-Normally when a page is being generated a temporary copy is stored in the cache-table with an expire-time of 30 seconds. 
+Alternative HTML message that appears if a page is being generated.
+Normally when a page is being generated a temporary copy is stored in the cache-table with an expire-time of 30 seconds.
+
+It is possible to use some keywords that are replaced with the corresponding values. Possible keywords are: ###TITLE###, ###REQUEST_URI###
 
 message_preview
 string
 Alternative message in HTML that appears when the preview function is active!
 
+message_preview_workspace
+string 
+Alternative message in HTML that appears when the preview function is active in a draft workspace. You can use sprintf() placeholders for Workspace title (first) and number (second).
+
+Examples:
+config.message_preview_workspace = <div class=previewbox>Displaying workspace named "%s" (number %s)!</div>
+config.message_preview_workspace = <div class=previewbox>Displaying workspace number %2$s named "%1$s"!</div>
+
 locale_all
 string
 PHP: setlocale("LC_ALL", [value]);
@@ -3310,7 +3420,8 @@
 default external target. Used by typolink if no extTarget is set
 _top
 spamProtectEmailAddresses
-boolean / "ascii" / -5 to 1
+"ascii" /
+-10 to 10
 If set, then all email addresses in typolinks will be encrypted so spam 
 bots cannot detect them.
 
@@ -3460,8 +3571,7 @@
 false
 stat_apache_logfile
 filename
-This the filename of the logfile in the directory $TYPO3_CONF_VARS["FE"]["logfile_dir"] (localconf) on the server where TYPO3 writes to the apachelogfile. The directory defined by $TYPO3_CONF_VARS["FE"]["logfile_dir"] must exist and be writable. It can be relative (to PATH_site) or absolute, but in any case it must be within the regular allowed paths of TYPO3 (meaning for absolute paths that it must be within the lockRootDir set up in TYPO3_CONF_VARS). 
-The logfile also must exist.
+This the filename of the logfile in the directory $TYPO3_CONF_VARS["FE"]["logfile_dir"] (localconf) on the server where TYPO3 writes to the apachelogfile. The directory defined by $TYPO3_CONF_VARS["FE"]["logfile_dir"] must exist and be writable. It can be relative (to PATH_site) or absolute, but in any case it must be within the regular allowed paths of TYPO3 (meaning for absolute paths that it must be within the lockRootDir set up in TYPO3_CONF_VARS).
 
 stat_apache_pagenames
 string
@@ -3482,13 +3592,21 @@
 boolean
 If true the HTTP_HOST is - if available - NOT inserted instead of the IP-address
 
+stat_apache_niceTitle
+boolean
+If set, the URL will be transliterated from the renderCharset to ASCII (eg ä => ae, à => a, &#945; "alpha" => a), which yields nice and readabe page titles in the log. All non-ASCII characters that cannot be converted will be changed to underscores.
+
+stat_apache_noRoot
+boolean
+If set, the root part (level 0) of the path will be removed from the path. This makes a shorter name in case you have only a redundant part like "home" or "my site".
+
 stat_titleLen
 int 1-100
 The lenght of the page names in the path written to logfile/database
 20
 simulateStaticDocuments
 boolean /
-string: PATH_INFO
+string
 If set TYPO3 makes all links in another way than usual. This can be used with Apache compiled with mod_rewrite and configured in httpd.conf for use of this in the ".htaccess"-files.
 Include this in the .htaccess file
 RewriteEngine On
@@ -3505,7 +3623,7 @@
 
 TYPO3 will interprete this as the page with alias = "start" and the type is zero (default):
 start.html
-_____________________________________________
+
 Alternative option (PATH_INFO):
 Instead of using the rewrite-module in apache (eg. if you?re running Windows!) you can use the PATH_INFO variable from PHP.
 It?s very simple. Just set simulateStaticDocuments to PATH_INFO and you?re up and running!
@@ -3536,6 +3654,15 @@
 23.0.html would be 23.html (that is without the zero)
 23.1.html would still be 23.1.html 
 
+simulateStaticDocuments_replacementChar
+string
+Word separator for URLs generated by simulateStaticDocuments. If set to
+hyphen, this option allows search engines to index keywords in URLs. Before TYPO3 4.0 this character was hard-coded to underscore.
+
+Depends on the compatibility mode (see Tools>Install>Update wizard):
+compatibility mode < 4.0.0: underscore _
+compatibility mode >= 4.0.0: hyphen -
+
 simulateStaticDocuments_dontRedirectPathInfoError
 boolean
 Regarding PATH_INFO mode:
@@ -3632,6 +3759,8 @@
 
 strict - The system will report an error if the requested translation does not exist. Basically this means that all pages with gray background in the Web>Info / Localization overview module will fail (they would otherwise fall back to default language in one or another way)
 
+ignore - The system will stay with the selected language even if the page is not translated and there?s no content available in this language, so you can handle that situation on your own then.
+
 sys_language_overlay
 boolean / keyword
 If set, records from certain tables selected by the CONTENT cObject using the languageField setting will select the default language (0) instead of any language set by sys_language_uid / sys_language_mode. In addition the system will look for a translation of the selected record and overlay configured fields.
@@ -3695,7 +3824,7 @@
 
 notification_email_encoding
 string
-This sets the encoding of plaintext emails (notification messages). Normally no encoding is applied at all. But setting this to eg. base64 will encode the content with base64 encoding (charset ISO-8859-1).
+This sets the encoding of plaintext emails (notification messages). The default encoding is quoted-printable. But setting this to eg. base64 will encode the content with base64 encoding.
 
 Values possible:
 base64
@@ -3704,7 +3833,7 @@
 
 notification_email_charset
 string
-Alternative charset for the notification mails. Is set only if an encoding type is entered.
+Alternative charset for the notification mails.
 ISO-8859-1
 admPanel
 boolean / ->ADMPANEL properties
@@ -3779,17 +3908,15 @@
 
 disablePrefixComment
 boolean
-If set, the stdWrap property prefixComment will be disabled, thus preventing any revealing and spaceconsuming comments in the HTML source code. (ver. > 3.6.0RC1)
+If set, the stdWrap property prefixComment will be disabled, thus preventing any revealing and spaceconsuming comments in the HTML source code.
 
 baseURL
-boolean or string
-If set to 1 this will automatically write out the <base> tag with current sites URL in the header of the document.
-If you set the value to a string that is expected to be the URL. Examples:
+string
+This writes the <base> tag in the header of the document. Set this to the value that is expected to be the URL.
 
+Example:
 config.baseURL = http://typo3.org/sub_dir/
 
-config.baseURL = 1
-
 tx_[extension key with no underscores]_[*]
 -
 Configuration space for plugins
@@ -3896,6 +4023,22 @@
 ->CONFIG
 configuration for the page. Any entries override the same entries in the toplevel-object "config".
 
+includeJS.[array]
+resource
+Inserts one or more (Java)Scripts in <script> tags.
+
+The file definition must be a valid "resource" datatype, otherwise nothing is inserted.
+
+Each file has optional properties:
+.style - setting the MIME type of the script (default: text/javascript)
+
+Example:
+includeJS {
+file1 = fileadmin/helloworld.js
+file1.type = application/x-javascript
+file2 = javascript_uploaded_to_template*.js
+}
+
 includeLibs
 array of strings
 With this you may include php-files. This does the same as "includeLibrary" in ->CONFIG but this can include more than one file. These files are included after the file of includeLibrary.
@@ -3947,19 +4090,19 @@
 
 .add_mainStyleOverrideDefs = [* / list of tags ] - will add all the RTE.default. mainStyleOverride_add - tags configured as well.
 
-Might be depreciated soon. Most likely the RTE should be configured by the stylesheet instead. Stay tuned...
+Might be deprecated soon. Most likely the RTE should be configured by the stylesheet instead. Stay tuned...
 
 noLinkUnderline
 boolean
 Disables link-underlining. Uses in-document stylesheet.
 
-Depreciated. Use stylesheet instead.
+Deprecated. Use stylesheet instead.
 
 hover
 HTML-color
 The color of a link when the mouse moves over it! (only MSIE). Uses in-document stylesheet.
 
-Depreciated. Use stylesheet instead.
+Deprecated. Use stylesheet instead.
 
 hoverStyle
 string
@@ -3968,7 +4111,7 @@
 Example:
 page.hoverStyle = font: bold; text-decoration: none;
 
-Depreciated. Use stylesheet instead.
+Deprecated. Use stylesheet instead.
 
 smallFormFields
 boolean
@@ -3978,7 +4121,7 @@
 Tip:
 Use this together with the config-option "compensateFieldWidth" set to "0.6" for netscape-browsers in order to render the small form fields in the same width!
 
-Depreciated. Use stylesheet instead.
+Deprecated. Use stylesheet instead.
 
 adminPanelStyles
 boolean
@@ -4185,7 +4328,7 @@
 This property is used only in some cases where CARRAY is used. Please look out for a note about that in the various cases.
 
 [tsref:->CARRAY]Content Objects (cObject)PHP-information: 
-The content objects (cObjects) are primarily controlled by the PHP-script "tslib/content.php". The PHP-class is named "tslib_cObj" and often this is also the variable-name of the objects ($cObj)
+The content objects (cObjects) are primarily controlled by the PHP-script "typo3/sysext/cms/tslib/content.php". The PHP-class is named "tslib_cObj" and often this is also the variable-name of the objects ($cObj)
 The $cObj in PHP has an array, $this->data, which holds records of various kind. See data type "getText".
 This record is normally "loaded" with the record from a table depending on the situation. Say if your creating a menu it?s often loaded with the page-record of the actual menuitem or if it?s about content-rendering it?ll be the content-record.IMPORTANT NOTE :
 When dealing with "cObjects", you?re allowed to use a special syntax in order to reuse cObjects without actually creating a copy. This has the advantage of minimizing the size of the cached template. But on the other hand it doesn?t give you the flexibility of overriding values. 
@@ -4259,7 +4402,7 @@
 Description:
 Default:
 value
-HTML / stdWrap
+HTML /stdWrap
 Raw HTML-code.
 
 [tsref:(cObject).HTML]
@@ -4370,13 +4513,13 @@
 
 altText
 titleText
-string / stdWrap
+string /stdWrap
 For <img> output only!
 
 If no titltext is specified, it will use the alttext insteadIf no alttext is specified, it will use an empty alttext
 
 longdescURL
-string / stdWrap
+string /stdWrap
 For <img> output only!
 
 "longdesc" attribute (URL pointing to document with extensive details about image).
@@ -4409,13 +4552,13 @@
 titleText
 
 (alttext)
-string / stdWrap
+string /stdWrap
 If no titltext is specified, it will use the alttext insteadIf no alttext is specified, it will use an empty alttext
 
 ("alttext" is the old spelling of this attribute. It will be used only if "altText" does not specify a value or properties)
 
 longdescURL
-string / stdWrap
+string /stdWrap
 "longdesc" attribute (URL pointing to document with extensive details about image).
 
 linkWrap
@@ -4465,11 +4608,11 @@
 Description:
 Default:
 height
-<img>-data:height / stdWrap
+<img>-data:height /stdWrap
 
 1
 width
-<img>-data:width / stdWrap
+<img>-data:width /stdWrap
 
 1
 wrap
@@ -4500,6 +4643,18 @@
 cObject
 
 < [tablename]
+slide
+integer
+If set and no content element is found by the select command, then the rootLine will be traversed back until some content is found.
+
+Possible values are -1 (slide back up to the siteroot), 1 (only the current level) and 2 (up from one level back).
+
+Use -1 in combination with collect.
+
+.collect (integer): If set, all content elements found on current and parent pages will be collected. Otherwise, the sliding would stop after the first hit. Set this value to the amount of levels to collect on, or use -1 to collect up to the siteroot.
+.collectFuzzy (boolean): Only useful in collect mode. If no content elements have been found for the specified depth in collect mode, traverse further until at least one match has occurred.
+.collectReverse (boolean): Change order of elements in collect mode. If set, elements of the current page will be on the bottom.
+
 wrap
 wrap
 Wrap the whole content-story...
@@ -4548,14 +4703,14 @@
 Description:
 Default:
 source
-records-list / stdWrap
+records-list /stdWrap
 List of record-id?s, optionally with appended table-names.
 
 Example:
 tt_content_34, 45, tt_links_56
 
 tables
-list /
+list of tables
 List of accepted tables. If any items in the ".source"-list is not prepended with a tablename, the first table in this list is assumed to be the table for such records.
 Also tablenames configured in .conf is allowed.
 
@@ -4611,7 +4766,7 @@
 (See separate table below)
 
 special.value
-list of page-uid?s / stdWrap
+list of page-uid?s /stdWrap
 See above
 
 minItems
@@ -4638,11 +4793,11 @@
 
 excludeUidList
 list of int
-This is a list of page uid?s to exclude when the select statement is done. Comma-separated.
+This is a list of page uid?s to exclude when the select statement is done. Comma-separated. You may add current to the list to exclude the current page.
 
 Example:
-The pages with these uid-number will NOT be within the menu!!
-34,2
+The pages with these uid-number will NOT be within the menu!! Additionally the current page is always excluded too.
+excludeUidList = 34,2,current
 
 excludeDoktypes
 list of integers
@@ -4659,13 +4814,18 @@
 
 protectLvar
 boolean / keyword
-If set, then for each page in the menu it will be checked if the GET variable &L has a value different from the current sys_language_uid and if an Alternative Page Language record for that sys_language_uid exists for the page. If that is not the case and the pages Localization settings have the Hide page if no translation for current language exists flag set, then the menu item will link to a non accessible page that will yield an error page to the user. Setting this option will prevent that situation by simply adding &L=0 for such pages, meaning that they will switch to the default language rather than keeping the current language.
+If set, then for each page in the menu it will be checked if an Alternative Page Language record for the language defined in "config.sys_language_uid" (typically defined via &L) exists for the page. If that is not the case and the pages Localization settings have the Hide page if no translation for current language exists flag set, then the menu item will link to a non accessible page that will yield an error page to the user. Setting this option will prevent that situation by simply adding &L=0 for such pages, meaning that they will switch to the default language rather than keeping the current language.
+The check is only carried out if a translation is requested ("config.sys_language_uid" is not zero).
 
 Keyword: all
 When set to all the same check is carried out but it will not look if Hide page if no translation for current language exists is set - it always reverts to default language if no translation is found.
 
 For these options to make sense, they should only be used when config.sys_language_mode is not set to content_fallback.
 
+addQueryString
+see typolink.addQueryString
+Notice: This works only for special=language.
+
 if
 ->if
 If "if" returns false, the menu is not generated
@@ -5204,7 +5364,7 @@
 Use this to import / generate the content, that should flow around the imageblock.
 
 textPos
-int / stdWrap
+int /stdWrap
 Textposition:
 bit[0-2]: 000 = centre, 001 = right, 010 = left
 bit[3-5]: 000 = over, 001 = under, 010 text
@@ -5230,7 +5390,7 @@
 This flag is only for a kind of backwards compatibility because this "feature" was recently considered a bug and thus corrected. So if anyone has depended on this way things are done, you can compensate with this flag.
 
 imgList
-list of imagefiles / stdWrap
+list of imagefiles /stdWrap
 list of images from ".imgPath"
 
 Example:
@@ -5287,13 +5447,13 @@
 
 altText
 titleText
-string / stdWrap
+string /stdWrap
 Default altText/titleText if no alternatives are provided by the ->IMAGE cObjects 
 
 If no titltext is specified, it will use the alttext insteadIf no alttext is specified, it will use an empty alttext
 
 longdescURL
-string / stdWrap
+string /stdWrap
 Default longdescURL if no alternatives are provided by the ->IMAGE cObjects 
 
 "longdesc" attribute (URL pointing to document with extensive details about image).
@@ -5454,7 +5614,7 @@
 .url = Url of the Netprint site page, eg. http://netprint.photo.com/?id=999&type=2
 .thisUrl = Url of this site, eg. http://mysite.com/typo3site/ (default is calculated from HTTP_HOST)
 .cObject = (cObject) The link content
-.ATagParams = <A>-tag parameters
+.ATagParams = <A>-tag parameters /stdWrap
 .outerStdWrap = (->stdWrap) stdWrap of the total linked cObject.
 .before = (boolean) If the link code should be inserted before the image (default is after)
 .linkOnlyPixelsAbove = (int) If set, only images with a total number of pixels greater than this number will be linked. This secures that small images will not be linked. Eg. if images above 640x480 is supposed to be linked, the limit should be approx. 300000
@@ -5631,7 +5791,7 @@
 Description:
 Default:
 data
-string/->stdWrap
+string /->stdWrap
 This is the data that sets up the form. See above.
 "||" can be used instead of linebreaks
 
@@ -5752,8 +5912,8 @@
 NOTE: If this value is set the target of this overriddes the target of the "type".
 
 recipient
-(list of) string/stdWrap
-email to formmail content to (generates the hiddenfield "recipient")
+(list of) string /stdWrap
+Email recipient of the formmail content (generates the hiddenfield "recipient")
 No email
 goodMess
 string
@@ -5867,16 +6027,39 @@
 Example:
 If value is tx_myextension[input][ | ] then the fieldname "email" would be wrapped to this value: tx_myextension[input][email]
 
+noWrapAttr
+boolean
+If this value is true then all wrap attributes of textarea elements are suppressed. This is needed for XHTML-compliancy.
+
+The wrap attributes can also be disabled on a per-field basis by using the special keyword "disabled" as the value of the wrap attribute.
+
 arrayReturnMode
 boolean
 If set, the <form> tags and the form content will be returned in an array as separate elements including other pratical values. This mode is for use in extensions where the array return value can be more useful.
 
 accessibility
 boolean
-If set, then the form will be compliant with accessibility guidelines. This includes:
+If set, then the form will be compliant with accessibility guidelines (XHTML compliant). This includes:
+
+label string will be wrapped in <label for="formname[fieldname-hash]"> ... </label>
+All form elements will have an id-attribute carrying the formname with the md5-hashed fieldname appended
 
-label string will be wrapped in <label for="[fieldname]"> ... </label>
-All form elements will have an id-attribute carrying the same value as the name-attribute (if you need unique ID-numbers you can use "wrapFieldName" to prefix all field names with a string of some kind). 
+Notice: In TYPO3 4.0 and later, CSS Styled Content is configured to produce accessible forms by default.
+
+formName
+string
+An alternative name for this form. Default will be a unique (random) hash.
+
+<form name=...>
+
+fieldPrefix
+string
+Alternative prefix for the name of the fields in this form. Otherwise, all fields are prefixed with the form name (either a unique hash or the name set in the formName property). If set to 0, there will be no prefix at all.
+
+dontMd5FieldNames
+boolean
+The IDs generated for all elements in a form are md5 hashes from the fieldname. Setting this to true will disable this behaviour and use a cleaned fieldname, prefixed with the form name as the ID, instead.
+This can be useful to style specifically named fields with CSS.
 
 [tsref:(cObject).FORM]
 Example: Login
@@ -5914,6 +6097,7 @@
 - "Like TV" is a checkbox. Default is "unchecked".
 - "formtype_mail" is the name of the submit-button. And it should be if you use the build-in formmail of TYPO3. Then this var makes TYPO3 react on the input at interpret it as formmail-input!
 - "html_enabled" will let the mail be rendered in nice HTML
+- "use_base64" will send the mail encoded as base64 instead of quoted-printable
 - "subject": Enter the subject of your mail
 - "recipient_copy" : A copy is sent to this mail-address. You may supply more addresses by separating with a comma ",". The mail sent to recicipent_copy is a the same, but a separate message from the one sent to the ?recipient? and furthermore the copy-mail is sent only if the ?recipient? mail is sent.
 - "auto_respond_msg": This is a autoresponder message. This is sent if the email of the "submitter" is known (field: "email"). The value of this is the message broken up in to lines by a slash "/". Each slash is a new line in the email. The first line is used for the subject.
@@ -6186,12 +6370,12 @@
 relPathPrefix
 string / properties
 Finds all relative references (eg. to images or stylesheets) and prefixes this value.
-If you specify properties these will match HTML tags (lowercase) and specify alternative paths for them. See example below.
+If you specify properties (uppercase) these will match HTML tags and specify alternative paths for them. See example below.
 If the property is named "style" it will set alternative path for the "url()" wrapper that may be in <style> sections.
 
 Example:
-page.10 = TEMPLATEpage.10 {  template = FILE  template.file = fileadmin/template.html  relPathPrefix = fileadmin/
-relPathPrefix.img = fileadmin/img/} 
+page.10 = TEMPLATEpage.10 { template = FILE template.file = fileadmin/template.html relPathPrefix = fileadmin/
+relPathPrefix.IMG = fileadmin/img/}
 
 Inthis example all relative paths found are prefixed "fileadmin/" unless it was the src attribute of an img tag in which case the path prefixed is "fileadmin/img/"
 
@@ -6339,16 +6523,20 @@
 (toolbar is a general list of icons regarding the page, so use this for pagerecords only)
 
 newRecordFromTable
-string, tablename
+string
 Will display a panel for creation of new element (in the top of list) on the page from that table.
 
+newRecordInPid
+int
+Define a page ID where new records (except new pages) will be created.
+
 line
 boolean / int
 If set, a black line will appear after the panel. This value will indicate the distance from the black line to the panel
 
 edit.displayRecord
 boolean
-If set, then the record edited is display above the editing form.
+If set, then the record edited is displayed above the editing form.
 
 onlyCurrentPid
 boolean
@@ -6573,7 +6761,7 @@
 Font size
 12
 fontColor
-GraphicColor
+GraphicColor /stdWrap
 Font color
 black
 fontFile
@@ -7009,7 +7197,7 @@
 For IMGMENU menu objects provided automatically
 noBlur
 Boolean
-Normally graphical links are "blurred" if the browser is msie. This removes the ugly box around a link. 
+Normally graphical links are "blurred" if the browser is MSIE. This removes the ugly box around a link. 
 If this property is set, the link is NOT blurred with "onFocus".
 For IMGMENU menu objects provided automatically
 explode
@@ -7399,9 +7587,13 @@
 Defines an alternative image to use. If an image returns here, it will override any GIFBUILDER configuration.
 
 ATagTitle
-string / stdWrap
+string /stdWrap
 which defines the title attribute of the a-tag. (See TMENUITEM also)
 
+ATagParams
+string
+Additional parameters
+
 wrap
 wrap
 Wrap of the menu item
@@ -7421,7 +7613,7 @@
 [tsref:(cObject).HMENU.(mObj).GMENU.(itemState)]GMENU_LAYERS / TMENU_LAYERS:
 GMENU_LAYERS / TMENU_LAYERS works as an extension to GMENU/TMENU, which means the these properties underneath is additional properties to the ones above. 
 The purpose of xMENU_LAYERS is to create 2-level (or more!) menus where the 2nd+ level is shown on a DHTML-layer. Most features works with modern browsers including Netscape, Microsoft Internet Explorer, Mozilla, Konqueror and Opera. You can cascade the menus as you like.
-NOTE: You must include the library "media/scripts/gmenu_layers.php" (for GMENU_LAYERS) and/or media/scripts/gmenu_layers.php (for TMENU_LAYERS) and you must also expand the xMENU_LAYERS to the next for the menu to make sense (use the expAll-flag).
+NOTE: You must include the library "typo3/sysext/cms/tslib/media/scripts/gmenu_layers.php" (for GMENU_LAYERS) and/or typo3/sysext/cms/tslib/media/scripts/tmenu_layers.php (for TMENU_LAYERS) and you must also expand the xMENU_LAYERS to the next for the menu to make sense (use the expAll-flag).
 Compatibilty: MSIE 4+, Netscape 4+ and 6+, Opera 5+, Konqueror.
 Notes: 
 Netscape 4 does not support mouseover on the layers. 
@@ -7863,11 +8055,14 @@
 
 
 ATagParams
-<A>-data
+<A>-params /stdWrap
+Additional parameters
 
+Example:
+class=board
 
 ATagTitle
-string / stdWrap
+string /stdWrap
 Allows you to specify the "title" attribute of the <a> tag around the menu item.
 
 Example:
@@ -8108,7 +8303,7 @@
 page.10 < temp.jsmenu
 
 This draws a menu with two selector boxesmedia/scripts/ Pluginsmedia/scripts/ in general
-This directory primarily contains php-scripts which are meant as ?external modules? as opposed to features included in the tslib/ libraries. Although they are distributed with TYPO3 just like tslib/ they form a basis for externally developed front-end functionality. So for most of these scripts, be inspired by them to write your own code. Notice the word ?most?; because some are written long time ago and does not represent the state-of-the-day to do it.About ?example templates?
+This directory primarily contains php-scripts which are meant as ?external modules? as opposed to features included in the typo3/sysext/cms/tslib/ libraries. Although they are distributed with TYPO3 just like tslib/ they form a basis for externally developed front-end functionality. So for most of these scripts, be inspired by them to write your own code. Notice the word ?most?; because some are written long time ago and does not represent the state-of-the-day to do it.About ?example templates?
 For each plugin script there is one or more example templates. These templates are a part of the documentation of the features in the plugin because they describe the features of the markers and subparts and present an example to learn from. Therefore the example templates may be change when new features come along or of other reasons.
 You should therfore not rely on using the default templates unless you?ll except the fact that they may change in the future! So make a copy, modify it for your own purpose if need and set up the TypoScript of the plugin to use your own template file!
 fe_adminLib.incFiles:
@@ -8315,9 +8510,9 @@
 The property parentObj is a hardcoded reference to the fe_adminLib object.
 
 
-no_cache
-boolean
-If set, &no_cache=1 is sent in the links of the fe_adminLib
+formurl
+->typolink
+Contains typolink properties for the URL (action tag) of the form.
 
 parseValues.[field]
 [list of parseCodes]
@@ -8562,7 +8757,7 @@
 See example in ?media/scripts/tipafriend_template.tmpl?
 
 code
-string / stdWrap
+string /stdWrap
 Code to define, what the script does. Case sensitive.
 
 defaultCode
@@ -8894,7 +9089,7 @@
 
 
 
-The file include.inc is now included (in tslib/pagegen.php). In this case it looks like this:
+The file include.inc is now included (in typo3/sysext/cms/tslib/pagegen.php). In this case it looks like this:
 file: fileadmin/scripts/include.inc
 <?
 ...
@@ -9058,13 +9253,5 @@
 Database-submit
 Detected by the mainscript "index.php" looking for the var "formtype_db" to be set. (could be the submit-button)
 Input MUST be POST method. And the REFERER and HTTP_HOST must match. To setup a script to handle the input, refer to the FE_DATA object.
-See examples from the tslib/media/scripts/ folder, eg. "guest_submit.inc"TipsPreparing pages for Direct Mail sending
-When you?re designing HTML-newsletter templates, there are some good things to keep in mind. First is to enable ?config.insertDmailerBoundaries? so you can categorize the content. In addition using media in your mail is perfectly OK as long as the url set by the href-parameter is encapsulated in double-quotes or not encapsulated. Using single-quotes, the capture function will not find your image.
-If you place forms in the direct mail, you should use GET method. POST method may not transfer data to the page. In addition form-urls are not directed through the jumpurl feature but rather directly to the target page.
-A nice trick is to place a little clear-gif image (use a filename other than ?clear.gif? though!) and put the parameter dmailerping=1 in the tag. This will force the capture function to set the url of this image absolute through the jumpurl registration. This means in other words that when this mail is opened it will be registered (response_code=2). This is an additional feature to the regular feature which registeres all links clicked in the mail (response_code=1).Example:
-<img src=dmailerping.gif width=1 height=1 dmailerping=1>Preparing pages for indexing
-The TYPO3 Indexing ?robot? will detect if any HTML contains the comments <!--TYPO3SEARCH_begin--> and <!--TYPO3SEARCH_end-->.
-If ?_begin? is found first, then the preceeding code is excluded and everything until the next _end is included etc.
-If ?_end? is found first, then the preceeding code is included, everything after is excluded until the next _begin from which code is again included etc.
-If neither ?_begin? or ?_end? is found everything is included in the indexed content.
+See examples from the typo3/sysext/cms/tslib/media/scripts/ folder, eg. "guest_submit.inc"
 
